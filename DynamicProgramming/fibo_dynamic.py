'''
메모이제이션은 다이나믹 프로그래밍을 구현하는 방법 중 하나이다
한 번 계산한 결과를 메모리 공간에 메모하는 기법(탑다운방식)
  같은 문제를 다시 호출하면 메모했던 결과를 그대로 가져옴
  값을 기록해 놓는다는 저멩서 캐싱(Caching)이라고 함

탑다운 VS 보텀업
 탑다운(메모이제이션)방식은 하향식, 보텀업방식은 상향식
 다이나믹 프로그래밍 == 보텀업
 결과 저장용 리스트는 DP테이블
'''

# 피보나치 수열 : 탑다운 다이나믹 프로그래밍--> 하향식

# 한 번 계산된 결과를 메모이제이션(Memoization)하기 위한 리스트 초기화
d = [0] * 100


def fibo(x):
    # 종료 조건(1 혹은 2일 때 1을 반환)
    if x == 1 or x == 2:
        return 1
    # 이미 계산한 적 있는 문제라면 그대로 반환
    if d[x] != 0:
        return d[x]
    # 아직 계산하지 않은 문제라면 점화식에 따라 피보나치 결과 반환
    d[x] = fibo(x-1) + fibo(x-2)
    return d[x]


print(fibo(99))


# 피보나치 수열 : 보텀업 다이나믹 프로그래밍--> 상향식

d = [0] * 100
d[1] = 1
d[2] = 1
n = 99

for i in range(3, n+1):
    d[i] = d[i-1] + d[i-2]

print(d[n])
