# <문제> 1로 만들기
# 정수 X가 주어질 때, 사용가능한 연산은 4가지이다.
# 1. X가 5로 나누어 떨어지면, 5로 나눈다.
# 2. X가 3으로 나누어 떨어지면, 3으로 나눈다.
# 3. x가 2로 나누어 떨어지면, 2로 나눈다.
# 4. X에서 1을 뺍니다.
# 정수 X가 주어졌을 때, 연산 4개를 적절히 사용해서 값을 1로 만들고자 함
# 연산을 사용하는 횟수의 최솟값을 출력

# 해결 아이디어 : a(i)를 1로 만들기 위한 최소 연산 횟수
# 점화식 ==> a(i) = min( a(i-1) , a(i/2) , a(i/3) , a(i/5) ) +1

# 정수 x 입력
x = int(input())

# DP테이블 초기화
d = [0] * 30001  # 1일 경우 자기자신이 1이므로 0으로 설정

# Dynamic Programming (보텀업)
for i in range(2, x+1):
    # 연산 4
    d[i] = d[i-1] + 1
    # 연산 3
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)
    # 연산 2
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)
    # 연산 1
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1)

print(d[x])
