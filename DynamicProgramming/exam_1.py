# <문제> 개미 전사
# 개미 전사가 메뚜기 마을의 식량창고를 공격하려고 합니다. 메뚜기 마으레 식량창고는 일직선으로 이어져 있다.
# 각 식량창고에는 정해진 수의 식량을 저장하고 있으며 개미 전사는 식량 창고를 선택적으로 약탈하여 식량을 빼앗을 예정이다.
# 이때 메뚜기 정찰병들은 일직선상에 존재하는 식량창고 중에서 서로 인접한 식량창고가 공격을 받으면 바로 알아챌 수 있다.
# 개미전사가 정찰병에게 들키지 않고 식량창고를 약탈하기 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 한다.
# 식량창고 N개에 대한 정보가 주어졌을 때 얻을 수 있는 식량의 최댓값을 구하는 프로그램

# 해결 아이디어 : a(i) = i번째 식량 창고까지의 최적의 해(얻을 수 있는 식량의 최댓값)--> 다이나믹 프로그래밍 적용
# k(i) = i번째 식량창고에 있는 식량의 양
# 점화식 ==> a(i) = max( a(i-1) , a(i-2)+k(i) )

# 식량창고 개수 입력
n = int(input())
# 식량 정보 입력
array = list(map(int, input().split()))

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 100

# Dynamic Programming (보텀업)
d[0] = array[0]
d[1] = max(array[0], array[1])
for i in range(2, n):
    d[i] = max(d[n-1], d[n-2]+array[i])
# 계산결과 출력
print(d[n-1])
