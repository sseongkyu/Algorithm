# 모험가 N명의 대상으로 '공포도' 측정
# '공포도'가 높은 모험가는 쉽게 공포를 느껴 위험 상황에서 제대로 대처할 능력이 떨어진다
# 길드장이 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있도록 규정
# 길드장이 최대 몇개의 모험가 그룹을 만들 수 있는가(N명의 모험가에 대한 정보를 알 때 여행을 떠날 수 있는 그룹수의 최댓값을 구하는 프로그램)

# 해결 아이디어 : 오름차순 정렬 후 하나씩 확인
# "현재 그룹에 포함된 모험가의 수"가 "현재 확인하고 있는 공포도"보다 크거나 같다면 이를 그룹으로 설정

n = int(input())
data = list(map(int, input().split()))
data.sort()

result = 0  # 총 그룹수
count = 0  # 현재 그룹에 포함된 모험가 수

for i in data:  # 오름차순으로 정렬된 공포도에서 하나씩 확인
    count += 1  # 그룹에 모험가 추가
    if count >= i:  # 현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이라면 그룹 결성
        result += 1  # 총 그룹수 증가
        count = 0  # 현재 그룹에 포함된 모험가 초기화

print(result)  # 총 그룹수 출력
